logging.level.telran=trace

#API
app.blocking.data.exist.url=/ip/exist
app.blocking.data.list.url=/ip/get_all
app.blocking.data.get.url=/ip/get
app.blocking.data.ips.url=/ip/get_ips

#Bindinngs
#Analyzer-block
app.analyzer.binding.name=blockIp-out-0
spring.cloud.stream.bindings.blockIp-out-0.destination=blocking-data
spring.cloud.stream.bindings.consumerBlockIp-in-0.destination=attempts-failure
spring.cloud.stream.bindings.consumerBlockIp-in-0.group=analyzer-group


#Cloud Confluent Kafka
# Required connection configs for Kafka producer, consumer, and admin 
spring.kafka.properties.sasl.mechanism=PLAIN 
spring.kafka.properties.bootstrap.servers=pkc-p11xm.us-east-1.aws.confluent.cloud:9092 
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username= ${CONFLUENT_API_USER} password=${CONFLUENT_API_SECRET}; 
spring.kafka.properties.security.protocol=SASL_SSL 
# Best practice for higher availability in Apache Kafka clients prior to 3.0 
spring.kafka.properties.session.timeout.ms=45000

#Mongo
spring.data.mongodb.uri=mongodb+srv://TelranTeam:${MONGO_PASSWORD}@cluster0.h9neli8.mongodb.net/requests?retryWrites=true&w=majority&appName=Cluster0

# Cloud Redis configuration
spring.data.redis.host=redis-17382.c281.us-east-1-2.ec2.cloud.redislabs.com
spring.data.redis.port=17382
spring.data.redis.username=default
spring.data.redis.password="${REDIS_PASSWORD}"